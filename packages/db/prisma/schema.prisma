generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ---------- Auth / Org ----------
model User {
  id           String     @id @default(cuid())
  clerkUserId  String     @unique
  email        String     @unique
  firstName    String?
  lastName     String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  userRoles    UserRole[]
}

model Role {
  id    String    @id @default(cuid())
  slug  String    @unique   // e.g. "admin", "sales"
  name  String

  users UserRole[]

  @@map("roles")
}

model UserRole {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String
  role   Role   @relation(fields: [roleId], references: [id])
  roleId String

  @@unique([userId, roleId])
  @@map("user_roles")
}

model Company {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())

  customers Customer[]

  @@map("companies")
}

// ---------- Customers / Tiers ----------
model CustomerTier {
  id    String @id @default(cuid())
  code  String @unique   // retail | construction | project
  name  String

  customers Customer[]

  @@map("customer_tiers")
}

model Customer {
  id        String       @id @default(cuid())
  companyId String
  tierId    String
  name      String
  email     String?      @unique
  phone     String?
  vatNumber String?
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt

  company   Company      @relation(fields: [companyId], references: [id])
  tier      CustomerTier @relation(fields: [tierId], references: [id])
  addresses CustomerAddress[]

  @@map("customers")
}

model CustomerAddress {
  id          String   @id @default(cuid())
  customerId  String
  kind        String   // "billing" | "delivery"
  line1       String?
  city        String?
  province    String?
  country     String?
  gpsLat      Decimal? @db.Decimal(10,6)
  gpsLng      Decimal? @db.Decimal(10,6)

  customer Customer @relation(fields: [customerId], references: [id])

  @@map("customer_addresses")
}

// ---------- Products / Suppliers / Inventory ----------
model Supplier {
  id            String   @id @default(cuid())
  supplierCode  String   @unique
  name          String
  contactName   String?
  email         String?
  phone         String?
  addressLine1  String?
  city          String?
  province      String?
  country       String?
  leadTimeDays  Int?
  minOrderValue Decimal? @db.Decimal(10,2)
  notes         String?

  items         SupplierItem[]

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("suppliers")
}

model Product {
  id                    String   @id @default(cuid())
  sku                   String   @unique
  name                  String
  category              String?
  subcategory           String?
  unit                  String?  // ea, bag, ton, pallet, m2, etc.
  imageUrl              String?
  unitsPerPallet        Int?
  weightKgPerUnit       Decimal? @db.Decimal(10,3)
  lengthMm              Int?
  widthMm               Int?
  heightMm              Int?
  coverageM2PerUnit     Decimal? @db.Decimal(10,3)
  coverageNotes         String?
  baseCostExVat         Decimal? @db.Decimal(10,2)
  vatRatePct            Decimal? @db.Decimal(5,2)
  marginRetailPct       Decimal? @db.Decimal(5,2)
  marginConstructionPct Decimal? @db.Decimal(5,2)
  marginProjectPct      Decimal? @db.Decimal(5,2)
  moqUnits              Int?
  reorderPointUnits     Int?
  leadTimeDays          Int?
  stackLimitUnits       Int?
  hazardousFlag         Boolean? @default(false)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  supplierItems         SupplierItem[]
  inventory             Inventory[]

  @@map("products")
}

model SupplierItem {
  id               String   @id @default(cuid())
  supplierId       String
  productId        String
  supplierItemCode String?

  supplier Supplier @relation(fields: [supplierId], references: [id])
  product  Product  @relation(fields: [productId], references: [id])

  @@unique([supplierId, productId])
  @@map("supplier_items")
}

model Inventory {
  id          String   @id @default(cuid())
  productId   String
  locationBin String
  qtyOnHand   Int      @default(0)
  qtyReserved Int      @default(0)
  qtyOnOrder  Int      @default(0)

  product Product @relation(fields: [productId], references: [id])

  @@unique([productId, locationBin])
  @@map("inventory")
}

// ---------- Fleet ----------
model Vehicle {
  id               String   @id @default(cuid())
  vehicleCode      String   @unique
  name             String
  type             String?   // tipper, ldv, etc.
  regNumber        String?
  maxPayloadKg     Int?
  bedVolumeM3      Decimal? @db.Decimal(10,2)
  axleLimitKg      Int?
  fuelLPer100km    Decimal? @db.Decimal(10,2)
  driverHourlyRate Decimal? @db.Decimal(10,2)
  costPerKmBase    Decimal? @db.Decimal(10,2)
  serviceIntervalKm Int?
  tyreSize         String?
  tyreCostEach     Decimal? @db.Decimal(10,2)
  tyreCount        Int?
  notes            String?

  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@map("vehicles")
}
